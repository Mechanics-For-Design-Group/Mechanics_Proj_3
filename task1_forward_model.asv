% make a instance of Parameters_Class
Robot = IRB460();
% get public parameters
para = Robot.get_parameters();
dG1 = para.dG1;
a1I = para.a1I;
d1I = para.d1I;
alphaI2 = para.alphaI2;
thetaI2 = para.thetaI2;
a23 = para.a23;
theta23 = para.theta23;
a34 = para.a34;
alpha46 = para.alpha46;
a46 = para.a46; 
d46 = para.d46;

% establish T from alpha, a, d, theta
syms alpha a d theta
T = [cos(theta), -sin(theta), 0, a;
    sin(theta)*cos(alpha), cos(theta)*cos(alpha), -sin(alpha), -sin(alpha)*d;
    sin(theta)*sin(alpha), cos(theta)*sin(alpha), cos(alpha), cos(alpha)*d;
    0, 0, 0, 1];

% establish Ts from T, parameters, angle1, angle2, angle3.
syms angle1 angle2 angle3
TG1 = subs(T, [alpha, a, d, theta], [0, 0, dG1, 0+angle1]);
T1I = subs(T, [alpha, a, d, theta], [0, a1I, d1I, 0]);
TI2 = subs(T, [alpha, a, d, theta], [alphaI2, 0, 0, thetaI2+angle2]);
T23 = subs(T, [alpha, a, d, theta], [0, a23, 0, theta23+angle3-angle2]);
T34 = subs(T, [alpha, a, d, theta], [0, a34, 0, -angle3]);
T46 = subs(T, [alpha, a, d, theta], [alpha46, a46, d46, 0]);

TG6 = TG1 * T1I * TI2 * T23 * T34 * T46;
simplify(TG6);

TG6 = TG1 * T1I * TI2 * T23 * T34 * T46;
simplify(TG6);


%通过改进D-H参数建立连杆，那个参数为变量就不写那个参数。
L(1) = Link(  'd',     dG1 ,  'theta',  0 , 'a' , 0 , 'alpha',   0 ,  'qlim', [-pi,pi], 'modified');
L(I) = Link(  'd',     d1I ,  'theta',  0 , 'a' , 0 , 'alpha', pi/2 , 'qlim', [0 , 10], 'modified');
L(2) = Link(  'd',     0 ,  'theta',  0 , 'a' , 0 , 'alpha',    0 , 'qlim', [-pi,pi], 'modified');
L(3) = Link(  'd',     0 ,  'theta',  0 , 'a' , 0 , 'alpha',    0 , 'qlim', [-pi,pi], 'modified');
L(4) = Link(  'd',     0 ,  'theta',  0 , 'a' , 0 , 'alpha',    0 , 'qlim', [-pi,pi], 'modified');
L(6) = Link(  'd',     2 ,  'theta',  0 , 'a' , 0 , 'alpha',    0 , 'qlim', [-pi,pi], 'modified');
IRB460 = SerialLink(L, 'name' , 'IRB460');   %建立模型
IRB460.plotopt = {'workspace',[-10,10,-10,10,-10,10],'tilesize',4};  %设置模型空间大小和地砖大小
IRB460.teach;       %画出模型并进行调控